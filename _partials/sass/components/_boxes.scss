
.box{
    @extend %grid_reset;
	@extend %cf;
    @extend %pad;
    @extend %space_v;
    > :last-child{
    	margin-bottom: 0;
    }
}
.box_small{
	@extend %pad_half;
}
.box_open{
	@extend %pad_n_h;
	border-width: 1px;
	border-style: solid;
    border-top-color: color(function);
    border-bottom-color: color(function);
    border-left-color: transparent;
    border-right-color: transparent;
	margin-top: -2px; // Adjusted baseline for borders.
}
.box_closed{
    border: 1px solid color(function);
	margin-top: -2px; // Adjusted baseline for borders.
}

//Creates a responsive, square container.
//Must have a .body inside for content.
.box_square{
    position: relative;
    display:block;
	overflow: hidden;
	word-break: break-word;
	@include media-query($smalls){
		@include rems(max-height, ($base-line-height * 5));
	}

	& .body{
		@extend %pad_t_half;
		@extend %pad_h_half;
		@extend %display_block;
		@extend %grid_reset;
		position: absolute;
		top: 0;
		left: 0;
		text-align: left;
	}

	&:before{
		margin-top: 100%;
		display:block;
		font-size: 0;
		color: transparent;
		content:" ";
	}

}
//
//Modifiers for box_square
//

// 3:4 box
.pano:before{
	margin-top: 75%;
}
// 1:2 box
.wide:before{
	margin-top: 50%;
}

.box_light{
	background-color: #fff;
}

.box_dark{
	background-color: colors(function);
	color: #fff;
	border-color: currentColor;
}
.box_glass{
	background-color: rgba(255,255,255,0.85);
	color: #333;
}
.box_tint{
	background-color: rgba(255,255,255,0.65);
	color: #333;
}
.box_panel{
	@extend .box_light;
	border-radius: $tab-border-radius;
	box-shadow: 0px 2px 0px rgba(0,0,0,0.1);
	position: relative;
}
.box_card{
	border-top: 2px solid color(primary);
	position: relative;
	overflow: hidden;
	margin-top: -2px;
	max-width: 24rem;
	@include type-space(max-height, 10);
	@extend %pad_half;
	@extend %space_v;
	@extend %inline;

	@include mq(bigs){
		@include type-space(height, 12);
	}

	&_head{
		@extend %space_v;
		@include type-space(line-height, 1);
	}
	& &_body{
		margin-top: 0;
		@include type-space(max-height, 6);
		overflow: hidden;
	}
	&_foot{
		border-top: 1px solid color(function);
		position: absolute;
		margin-top: -1px;
		bottom: 0;
		left: 0;
		box-shadow: 0 -5px 5px 3px rgba(255,255,255,1);
		@extend %pad_l_half;
		@extend %pad_r;
		vertical-align: middle;
		@extend %one_whole;
		background-color: #fff;
		@include type-space(max-height, 2);

		&:after{
			@extend .icon:after;
			content:"down";
			position: absolute;
			right: .5em;
			top: 0;
			@extend %pad_v_half;
		}
	}
}
@mixin responsive-borders(
	$namespace: "",
	$include-classes: false
)
{
	$selector: unquote(", .");

    @if $include-classes == false{
        $selector: unquote("//");
    }
	%#{$namespace}border_t#{$selector}#{$namespace}border_t
	{
		border-top: $border-width $border-style $border-color;
		margin-top: -($border-width);

		@at-root &_2{
			border-top-width: ($border-width*2);
			border-top-style: $border-style;
			margin-top: -($border-width*2);
		}
		@at-root &_half{
			border-top-width: ($border-width/2);
			border-top-style: $border-style;
			margin-top: -($border-width/2);
		}
	}
	%#{$namespace}border_r#{$selector}#{$namespace}border_r
	{
		border-right: $border-width $border-style $border-color;

		@at-root &_2{
			border-right-width: ($border-width*2);
		}
		@at-root &_half{
			border-right-width: ($border-width/2);
		}
	}
	%#{$namespace}border_b#{$selector}#{$namespace}border_b
	{
		border-top: $border-width $border-style $border-color;
		margin-top: -($border-width);

		@at-root &_2{
			border-bottom-width: ($border-width*2);
			margin-top: -($border-width*2);
		}
		@at-root &_half{
			border-bottom-width: ($border-width/2);
			margin-top: -($border-width/2);
		}
	}
	%#{$namespace}border_l#{$selector}#{$namespace}border_l
	{
		border-left: $border-width $border-style $border-color;

		@at-root &_2{
			border-top-width: ($border-width*2);
		}
		@at-root &_half{
			border-top-width: ($border-width/2);
		}
	}
	%#{$namespace}border_h#{$selector}#{$namespace}border_h
	{
		@extend %#{$namespace}border_l; @extend %#{$namespace}border_r;

		@at-root &_2{
			@extend %#{$namespace}border_l_2; @extend %#{$namespace}border_r_2;
		}
		@at-root &_half{
			@extend %#{$namespace}border_l_half; @extend %#{$namespace}border_r_half;
		}
	}
	%#{$namespace}border_v#{$selector}#{$namespace}border_v
	{
		@extend %#{$namespace}border_t; @extend %#{$namespace}border_b;

		@at-root &_2{
			@extend %#{$namespace}border_t_2; @extend %#{$namespace}border_b_2;
		}
		@at-root &_half{
			@extend %#{$namespace}border_t_half; @extend %#{$namespace}border_b_half;
		}
	}
}

@include responsive-borders("", $include-border-classes);

@if $responsive == true{
    @each $name in $breakpoint-has-widths {
        @include media-query($name) {
           @include responsive-borders('#{$name}_', $include-border-classes);
        }
    }
}


