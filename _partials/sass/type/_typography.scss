//Default variables are in /utilities/_variables.scss


//Checking for floats in $type-ratio
@if length($type-ratio) == 2{
// Making sure we don't have a ratio below 1.
    @if nth($type-ratio,1) < nth($type-ratio,2){
        $type-modular-scale:   nth($type-ratio, 2)/nth($type-ratio, 1);
    }@else{
        $type-modular-scale:   nth($type-ratio, 1)/nth($type-ratio, 2);
    }
}
@else {
    $type-modular-scale:   $type-ratio;
}
/*------------------------------------*\
    #BASE
\*------------------------------------*/

 // 1. Set the base element’s `font-size` to the value of your choosing. Set in
 //    ems, assuming a browser default of 16px.
 // 2. Work out the unitless `line-height` for your project based around your
 //    desired `line-height` (defined previously in pixels), and your project’s
 //    base font size.

%type-vertical-rhythm {
    @extend %type-reset;
    margin-bottom: $type-magic-number;
    margin-bottom: $type-magic-ratio + rem;
}

html {
    @extend %type-reset;
    @extend %type-family;
    font-size: $type-base-font-size / 16px + em; // [1]
    line-height: $type-base-line-height / $type-base-font-size; // [2]
    -ms-text-size-adjust: 100%;
    -webkit-text-size-adjust: 100%;

    // If you have chosen to display a baseline grid, we turn it on here.
    @if $type-show-baseline == true {
        $type-baseline-size: strip-units($type-magic-number);
        background-image: url(http://basehold.it/i/#{$type-baseline-size}); // [3]
    }
    // Makes sticky footers much easier.
    width: 100%;
    height: 100%;
}
body {
    font-size: 1em;
    @extend %type-reset;
}

//Allow a toggle for baseline image
@if $type-show-baseline == true {
    .baseline-off{
        background-image:none;
    }
}



/*------------------------------------*\
    #HEADINGS
\*------------------------------------*/

@if $type-auto-scale == true {


 // 1. If you've chosen to automatically scale your type, we set that up here.
 // 2. Using heading numbers[6-1], we create a loop.
 // 3. Use the current scale number to exponentially scale up our base-font-size.
 // 4. Invert the current value of the loop($i) for an more traditionally ordered
 //    output (h1,h2,h3,h4,h5,h6).
 // 5. Use our new modular values for input into type mixins to generate our
 //    desired, modularly-scaled css.

    @each $i in $type-headings{
            $font-size: modular-scale($i);
            $current-heading: nth($type-headings,$i);

            h#{$current-heading}{
                @extend %type-vertical-rhythm;
                @include type-font-size($font-size, true);

                @if $type-indented-paragraphs == false{
                    &+p{
                        @include type-space(margin-top, -1);
                    }
                };
            };
            @if $type-scale-classes == true{
                .h#{$current-heading}{
                    @include type-font-size($font-size, true);
                }
            };
            $i: $i + 1;
    };

}
@else{

h1 {
    @extend %type-vertical-rhythm;
    @include type-font-size($type-h1-size);
}

h2 {
    @extend %type-vertical-rhythm;
    @include type-font-size($type-h2-size);
}

h3 {
    @extend %type-vertical-rhythm;
    @include type-font-size($type-h3-size);
}

h4 {
    @extend %type-vertical-rhythm;
    @include type-font-size($type-h4-size);
}

h5 {
    @extend %type-vertical-rhythm;
    @include type-font-size($type-h5-size);
}

h6 {
    @extend %type-vertical-rhythm;
    @include type-font-size($type-h6-size);
}
}




/*-------------------------------
    #LISTS
-------------------------------*/
ul, ol, dd, menu {
    @extend %type-vertical-rhythm;
    @include type-space(margin-left, 1);
}

li > ul,
li > ol {
    margin-bottom: 0;
}





/*-------------------------------
    #PARAGRAPHS
-------------------------------*/
p {
    @extend %type-vertical-rhythm;

    @if $type-indented-paragraphs == true {

        + p {
            @include type-space(text-indent);
            margin-top: -$type-magic-number;
            margin-top: -$type-magic-ratio + rem;
        }

    }

}

//
// Not strictly a paragraph, but probably doesn’t need its own section.
//
address {
    @extend %type-vertical-rhythm;
}


pre {
    @extend %type-vertical-rhythm;
    white-space: pre;
    white-space: pre-wrap;
    word-wrap: break-word;
}


// 1. Fix an odd quirk whereby, without this, code blocks are rendered at a
//    font-size smaller than 1em.

code,
kbd,
pre,
samp {
    font-family: monospace, monospace; // [1]
    _font-family: 'courier new', monospace;
    font-size: 1em;
}

/*Address styling not present in IE 7/8/9, Safari 5, and Chrome.*/

abbr[title] {
    border-bottom: 1px dotted;
}




/*-------------------------------
    #QUOTES
-------------------------------*/
//
// 1. Hang the opening quote of the blockquote.
//
blockquote {
    text-indent: -0.41em; // [1] */
}

blockquote {
    @extend %type-vertical-rhythm;
    quotes: "“" "”";
    @include type-space(margin-left);

    p {

        &:before {
            content: "“";
            content: open-quote;
        }

        &:after {
            content: "";
            content: no-close-quote;
        }

        &:last-of-type:after {
            content: "”";
            content: close-quote;
        }

    }

}

q   {
    quotes: "‘" "’" "“" "”";
    overflow: visible;

    &:before {
        content: "‘";
        content: open-quote;
    }

    &:after {
        content: "’";
        content: close-quote;
    }

    q:before {
        content: "“";
        content: open-quote;
    }

    q:after{
        content: "”";
        content: close-quote;
    }

    /**
     * If an element opens with an inline quote, let’s hang that.
     */
    &:first-child {
        display: inline-block;
        text-indent: -0.22em;
    }

}
table {
    @extend %type-vertical-rhythm;
    width: 100%;
    border-collapse: collapse;
    border-spacing: 0;
}

th,
td {
    padding: $type-base-line-height / 2;}

b,strong{
    font-weight: bold;}
dfn {
    font-style: italic;}
small {
    @include type-scale(-1);}
sub,sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;}
sup {
    top: -0.5em;
}
sub {
    bottom: -0.25em;
}
fieldset {
    border: 0;
    margin: 0 2px;
    @include type-scale(padding, -1);
}
